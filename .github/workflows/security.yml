name: Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Lance un scan de s√©curit√© quotidien √† 2h du matin
    - cron: '0 2 * * *'

jobs:
  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, gd, iconv, json, mbstring, pdo

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install PHP dependencies
      run: composer install --no-dev --optimize-autoloader

    - name: Install Node dependencies
      run: npm ci

    - name: Copy environment file
      run: cp .env.example .env

    - name: Generate application key
      run: php artisan key:generate

    - name: Create SQLite database
      run: touch database/database.sqlite

    - name: Run database migrations
      run: php artisan migrate --force

    - name: Run PHP security tests
      run: php artisan test --testsuite=Feature --filter=Security --verbose

    - name: Run JavaScript security tests
      run: npm run test

    - name: Run ESLint security analysis
      run: npm run lint

    - name: PHP Security Audit
      run: composer audit --format=json --working-dir=. > php-security-report.json || true

    - name: JavaScript Security Audit
      run: npm audit --json > js-security-report.json || true

    - name: Run custom security scan
      run: ./scripts/security-scan.sh

    - name: Upload security reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-reports
        path: |
          security-reports/
          php-security-report.json
          js-security-report.json
          security-report.txt

    - name: Notify on security issues
      if: failure()
      uses: 8398a7/action-slack@v3
      with:
        status: failure
        text: 'üö® Vuln√©rabilit√©s de s√©curit√© d√©tect√©es dans Koumbaya!'
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  dependency-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run PHP Dependency Check
      uses: php-actions/composer@v6
      with:
        command: audit

    - name: Setup Node.js for dependency check
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies for audit
      run: npm ci

    - name: Run NPM Audit
      run: npm audit --audit-level=moderate

  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run security-focused linting
      run: npm run lint -- --config eslint-security.config.js

    - name: Build with security checks
      run: npm run build
      env:
        NODE_ENV: production

    - name: Check for exposed secrets
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD